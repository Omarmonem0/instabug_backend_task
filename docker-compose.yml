version: "3"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
    environment:
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      #configures a volume in your host machine so that your elasticsearch indexed data doesn't gets cleared when you stop your container.
      - ./docker_data/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
  db:
    image: mysql:5.7
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: instabug_backend_task
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    restart: always
    ports:
      - "3307:3306"
  redis:
    image: redis
  sidekiq:
    depends_on:
      - redis
    build: .
    command: bundle exec sidekiq
    volumes:
      - ".:/instabug_backend_task"
    environment:
      RAILS_ENV: "development"
      REDIS_URL: "redis://redis:6379/2"
      DB_USER: root
      DB_NAME: web
      DB_PASSWORD: password
      DB_HOST: db
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
  web:
    build: .
    command:
      bash -c "rm -f tmp/pids/server.pid && bundle exec rails db:migrate &&
      bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/instabug_backend_task
    ports:
      - "3001:3000"
    depends_on:
      - db
    links:
      - db
    environment:
      DB_USER: root
      DB_NAME: instabug_backend_task
      DB_PASSWORD: password
      DB_HOST: db
      RAILS_ENV: "development"
      REDIS_URL: "redis://redis:6379/2"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
